# Files in the config/locales directory are used for internationalization
# and are automatically loaded by Rails. If you want to use locales other
# than English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t 'hello'
#
# In views, this is aliased to just `t`:
#
#     <%= t('hello') %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# To learn more, please read the Rails Internationalization guide
# available at http://guides.rubyonrails.org/i18n.html.

# Note that since title_html and add_html end in the characters _html, we are free to
# use HTML entity names for characters that do not appear on our keyboard.
# If we did not name the translation key this way, what you would end up seeing
# on the page is the markup. This is yet another convention that Rails has
# adopted to make your coding life easier. Rails will also treat names that contain
# html as a component (in other words, the string .html.) as HTML key names.
zh:

  number:
    currency:
      format:
        unit:      "$"
        precision: 2
        separator: "."
        delimiter: ","
        format:    "%u%n"

  errors:
    template:
      body:        "There were problems with the following fields:"
      header:       
        one:       "1 error prohibited this %{model} from being saved"
        other:     "%{count} errors prohibited this %{model} from being saved"

  layouts:
    application:
      title:       "Agile Web Development With Rails 书架"
      home:        "主页"
      questions:   "常见问题"
      news:        "新闻"
      contact:     "联系我们"
      login:       "登录"
      logout:      "注销"
  carts:
    cart:
      title:       "购物车"
      empty:       "清空购物车"
      checkout:    "支付"

  store:
    index:
      title_html:  "目录"
      add_html:    "加入购物车"

  orders:
    new:
      legend:       "请输入详情"
    form:
      name:         "名字"
      address_html: "地址"
      email:        "E-mail"
      pay_type:     "支付方式"
      pay_prompt_html: "请选择支付方式"
      submit:       "下单"

  thanks:          "感谢下单！"
